<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Teddy Food</title>
 <link href="http://saturnisbig.github.com/atom.xml" rel="self"/>
 <link href="http://saturnisbig.github.com"/>
 <updated>2013-12-16T23:37:06+08:00</updated>
 <id>http://saturnisbig.github.com</id>
 <author>
   <name>Teddy</name>
   <email>i.kenting@gmail.com</email>
 </author>

 
 <entry>
   <title>缺点改正</title>
   <link href="http://saturnisbig.github.com/life/2013/09/06/quedian"/>
   <updated>2013-09-06T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/life/2013/09/06/quedian</id>
   <content type="html">&lt;p&gt;以下几点，先后顺序与重点之间没有关系。&lt;/p&gt;

&lt;p&gt;1.办事拖拉&lt;/p&gt;

&lt;p&gt;&lt;em&gt;原因分析&lt;/em&gt;：也不是所有事都拖拉，这类事一般涉及到别人，但也不是全部。如果是自身的事，一般不会拖拉。之所以拖拉，也是跟其他方面有关。比如对一些事情考虑过多，犹犹豫豫，导致错过了最佳时机。有一些事没试着去做就放弃，导致事情一开始就完成不了。还有就是如果一件事情要麻烦到别人，自己心里也是会犹豫不决，事情也会办得拖拉（最后，还是要去沟通，但浪费了时间）。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;解决办法&lt;/em&gt;：能够马上做的事情，早点完成。许多事情只要有可能就要去尝试。对于要拜托别人的事，既然摆脱不了拜托别人，那就调整自己的心态，早求人晚求人一样是麻烦别人，有机会还人情给别人就是。&lt;/p&gt;

&lt;p&gt;2.做事不够用心，做事方法过于死板，不懂变通&lt;/p&gt;

&lt;p&gt;&lt;em&gt;原因分析&lt;/em&gt;：这类事往往是自己想得过于简单，也不够重视。很多事情可能只是看到了别人那么做的表面，然后就跟着那么做，但是不是每件事都能够按照一模一样的方式就能做成的。估计是平时从事了较多的事务性工作，搞得自己凡是都按既成的方式去做，没有加入自己思路。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;解决办法&lt;/em&gt;：养成一种类似思维定势的习惯，不是针对做事的方法，而是在做每一件事情前，先给自己几秒钟时间思考，为什么你要照着这么做，这样做合适吗？原因是啥？能否尝试别的方法？关于这点，必须在今后遇到事的时候，逼着自己按照这种模式来处理。&lt;/p&gt;

&lt;p&gt;3.不够自信，在人前变现得不够大方，胆小&lt;/p&gt;

&lt;p&gt;&lt;em&gt;原因分析&lt;/em&gt;：主要原因还是自己骨子里的自卑。关于何时开始有的自卑心理，我想应该是从小学4年级后就开始慢慢形成了吧。初中的时候，这种心理一直是自己努力的动力，当时写了一句自相矛盾的话“自卑也是一种自信”。因为我觉得，不屈服命运的心里，会让你自己加倍努力。不够大方，总是因为自己在与人接触的时候，一碰到没有话题，总觉得尴尬，就会开始感到局促不安。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;解决办法&lt;/em&gt;：网上参考的，用补偿心理来超越自卑，既然在某些方面让你感到自卑，那就努力再其他方面获得别人的尊重，逐步克服自卑心态。要乐观面对失败，分解目标，从小目标开始，慢慢过渡到大目标，降低失败的可能性。通过一些实际行动来建立自信：睁大眼睛正视别人，昂首挺胸，快步行走，练习当众发言，学会微笑。这些都要从正视自己的自卑开始。&lt;/p&gt;

&lt;p&gt;4.做事情犹犹豫豫，不够果断&lt;/p&gt;

&lt;p&gt;&lt;em&gt;原因分析&lt;/em&gt;：考虑事情过于细致，这点跟做事不够用心有矛盾。既然做事不够用心，那咋来考虑过于细致。考虑的大多不是解决事情的方法，而是设置在事情前面的障碍，通过设置这些障碍，找到不做这个事情的借口，导致了犹犹豫豫。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;解决办法&lt;/em&gt;：不要先给事情设置障碍，要从解决事情的角度来考虑问题。但是，并不是鲁莽行事而是要理性客观的来分析，敢于做决定而不后悔。总之，就是做这件事，你要有理由说服自己做得没错，不管最后的结果。&lt;/p&gt;

&lt;p&gt;5、6、7&amp;#8230;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Setting django web server using uwsgi and nginx on Mac</title>
   <link href="http://saturnisbig.github.com/programming/2013/05/20/setting-django-web-server-using-uwsgi-and-nginx-on-mac"/>
   <updated>2013-05-20T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/programming/2013/05/20/setting-django-web-server-using-uwsgi-and-nginx-on-mac</id>
   <content type="html">&lt;h2 id='prepare_work'&gt;Prepare work&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Install Homebrew to manage your package on mac&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为之前安装了macport来管理软件包，安装homebrew之前想先把macport卸载了。官方文档提示作法如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install virtualenv and pip&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='install_uwsgi_and_configuration'&gt;Install uWSGI and configuration&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;create a virtual env and django project for this tutorial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $cd ~
  $mkdir env
  $cd env
  $virtualenv uwsgi-tutorial
  # this create a virtual env for this tutorial
  $cd uswgi-tutorial
  $pip install django
  $django-admin.py startproject mysite    # this create a project under uwsgi-tutorial named: mysite&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;install uWSGI into your virtualenv&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $pip install uwsgi
  # uwsgi will locate in this place: &amp;#39;/Users/yourname/uswgi-tutorial/bin&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;test your uWSGI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令： # test.py def application(env, start_response): start_response(&amp;#8216;200 OK&amp;#8217;, &lt;span&gt;(&amp;#8216;Content-Type&amp;#8217;, &amp;#8216;text/html&amp;#8217;)&lt;/span&gt;) return &amp;#8220;Hello World&amp;#8221;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # Run uWSGI
  $uwsgi --http :8000 --wsgi-file test.py


  # The options here means:
  # http :8000: use protocol http, port 80000
  # wsgi-file text.py:load the specified file, test.py
  # on your browser visit: http://127.0.0.1:8000, and you will see &amp;quot;Hello World&amp;quot;
  # if this works, it means the connection as follow
  the web client &amp;lt;-&amp;gt;uWSGi&amp;lt;-&amp;gt;Python&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;test your Django project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;测试django项目能否正常运行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $python manage.py runserver 0.0.0.0:8000
  # visit http:localhost:8000, if this work, run it using uWSGI
  $uwsgi --http :8000 --module mysite.wsgi
  # module mysite.wsgi: load the specified wsgi module.
  # this means the connection as follow:
  the web client&amp;lt;-&amp;gt;uWSGI&amp;lt;-&amp;gt;Django&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='basic_nginx'&gt;Basic nginx&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;install nginx on a mac using Homebrew&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用brew命令来进行相关安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $brew install nginx     
  # install nginx in this place: &amp;#39;/usr/local/etc/nginx/&amp;#39;
  # you could start nginx by this command, but you will get some errors, telling you
  # that &amp;#39;can&amp;#39;t find the nginx.conf file&amp;#39;. so we need some default setting for nginx.
  $sudo nginx
  # use the default configuration for nginx
  $sudo cp /urs/local/etc/nginx/nginx.conf.default /usr/local/etc/nginx/nginx.conf
  $sudo cp /urs/local/etc/nginx/mime.types.default /usr/local/etc/nginx/mime.types
  # now run this command, and visit this address:http://127.0.0.1:8080, and will see
  # some nginx welcom message.
  $sudo nginx&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;configure nginx for your site&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;将nginx安装目录下的&amp;#8217;uwsgi_params&amp;#8217; 文件拷贝到你的project目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $sudo cp /usr/local/etc/nginx/uwsgi_params ./


  # the content inside your nginx configuration file, we name it: &amp;#39;mysite_nginx.conf&amp;#39;

  # the upstream component nginx needs to connect to
  upstream django {
      # server unix:////path/to/your/mysite/mysite.sock; # for a socket
      server 127.0.0.1:8001
  }
  # configuration of the server
  server {
      the port your site will be served on
      listen 8000;
      the domain name it will serve for
      server_name localhost;
      charset utf-8;

      max upload size
      client_max_body_size 75M;

      # Django media
      location /media {
          alias /path/to/your/mysite/mysite/media; # your django project&amp;#39;s media file
      }
      location /static {
          alias /path/to/your/mysite/mysite/static; #your django project&amp;#39;s static file.
      }
      # finally, send all non-media requests to the django server.
      location / {
          uwsgi_pass django;
          include /path/to/you/mysite/uwsgi_params;
      }
  }&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后，在nginx的默认配置文件中添加下面命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $sudo mkdir /usr/local/etc/nginx/sites-enabled
  # symlink to this file from &amp;#39;/usr/local/etc/nginx/sites-enabled/&amp;#39;, so nginx can see it.
  $sudo ln -s ~/path/to/your/mysite/mysite_nginx.conf /usr/local/etc/nginx/sites-enabled/
  $vim /usr/local/etc/nginx/nginx.conf
  # add this to the end of &amp;#39;nginx.conf&amp;#39; file, inside the &amp;#39;http&amp;#39; part before the end &amp;#39;}&amp;#39; char.
  # make nginx to include the file inside &amp;#39;sites-enabled&amp;#39;
  include /usr/local/etc/nginx/sites-enabled/*
  # restart nginx
  $sudo nginx -s stop
  $sudo nginx&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='nginx_and_uwsgi'&gt;nginx and uWSGI&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;建立uWSGI和nginx关联&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $uwsgi --socket :8001 --wsgi-file test.py
  # socket :8001: use protocol uwsgi, port 8001
  # 因为我们已经配置好nginx与uWSGI的8001端口关联了。现在的关系是：
  $the web client&amp;lt;-&amp;gt;the web server&amp;lt;-&amp;gt;the socket&amp;lt;-&amp;gt;uWSGI&amp;lt;-&amp;gt;Python&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果一切正常的话，那么我们的nginx与uWSGI之间已经建立了联系，我们的mysite_nginx.conf配置文件也配置正确了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;using unix sockets instead of ports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;修改mysite_nginx.conf中的内容，将下列内容的注释取消掉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  server unix:///path/to/your/mysite/mysite.sock; #这行的注释取消
  # server 127.0.0.1:8001; #将这行注释掉&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次运行uWSGI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $uwsgi --socket mysite.sock --wsgi-file test.py
  # 如果上面的命令运行不了，查看下nginx的日志会发现是权限不足，换做下面的命令
  # nginx的日志默认在这个位置：&amp;#39;/usr/local/Cellar/nginx/1.4.1/logs/error.log&amp;#39;, 如果是通过&amp;#39;brew&amp;#39;安装的话。
  $uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666 #(very permissive, maybe use 664)&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;running django application with uwsgi and nginx&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;运行下列命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问http:127.0.0.1:8000的话应该可以见到django项目的欢迎信息。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;configuring uWSGI to run with .xml file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;官方文档里面是使用的.ini配置文件，但是尝试了很多次都无法成功，后面改用.xml，it works。至于 .ini为什么不对，原因还不知道。我的.xml配置文件如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  # mysite_uwsgi.xml file
  &amp;lt;uwsgi&amp;gt;
    &amp;lt;socket&amp;gt;/path/to/your/mytest/mytest.sock&amp;lt;/socket&amp;gt;
    &amp;lt;master/&amp;gt;
    &amp;lt;chdir&amp;gt;/path/to/your/mytest&amp;lt;/chdir&amp;gt;
    &amp;lt;module&amp;gt;mytest.wsgi&amp;lt;/module&amp;gt;
    &amp;lt;chmod-socket&amp;gt;666&amp;lt;/chmod-socket&amp;gt;
  &amp;lt;/uwsgi&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后运行命令，没错的话，应该可以正常运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $uwsgi -x mysite_uwsgi.xml&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='install_uwsgi_systemwide_and_using_emperor_mode'&gt;install uWSGI system-wide and using Emperor mode&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;install uWSGI system-wide&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从virtualenv中退出：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $deactive&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在系统中安装uWSGI&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $sudo pip install uwsgi
  # or install LTS(long term support)
  $sudo pip install http://projects.unbit.it/downloads/uwsgi-lts.tar.gz
  # 在project mysite下运行测试下是否安装成功
  $uwsgi -x mysite_uwsgi.xml &lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;using emperor mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $sudo mkdir /etc/uwsgi
  $sudo mkdir /etc/uwsgi/vassals
  # symlink from the default config directory to your config file
  $sudo ln -s /path/to/your/mysite/mysite_uwsgi.xml /etc/uwsgi/vassals
  # run the emperor
  $uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data
  # add &amp;#39;sudo&amp;#39; maybe.&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='reference'&gt;reference:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;uwsgi wiki on readthedocs &lt;a href='https://uwsgi.readthedocs.org/en/latest/tutorials/Django_and_nginx.html'&gt;Django and nginx&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;install virtualenv and pip &lt;a href='http://www.v2ex.com/t/42760'&gt;Install virtualenv and pip&amp;#8211;from v2ex&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Django 服务器的选择&lt;a href='http://blog.csdn.net/bo5509/article/details/8200942'&gt;Django服务器的选择&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content>
 </entry>
 
 <entry>
   <title>2013 Goals</title>
   <link href="http://saturnisbig.github.com/life/2013/04/21/2013-goals"/>
   <updated>2013-04-21T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/life/2013/04/21/2013-goals</id>
   <content type="html">&lt;h1 id='2013maybe_add_more_later'&gt;2013年目标(maybe add more later&amp;#8230;)&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;s&gt;结婚 (marry with pudding, done 2013-11-30, married day 2013-09-24)&lt;/s&gt;&lt;/li&gt;

&lt;li&gt;&lt;s&gt;买房 (not sure. done 2013-08-30)&lt;/s&gt;&lt;/li&gt;

&lt;li&gt;&lt;s&gt;换手机(done)&lt;/s&gt;&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;制作一款手机应用 (something to manage list things.)&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;看很多书 (小说，programming，心理学etc.)&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;&lt;s&gt;买一台苹果的电脑(done 2013-03-29:Mac mini, 2013-04-19:display, BenQ GL2023)&lt;/s&gt;&lt;/li&gt;

&lt;li&gt;&lt;s&gt;跟布丁乘火车去旅游(done 2013-12-03 To 2013-12-09)&lt;/s&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;- 学游泳&lt;/p&gt;

&lt;p&gt;- 学日语&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>吵架</title>
   <link href="http://saturnisbig.github.com/2013/04/01/chaojia"/>
   <updated>2013-04-01T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/2013/04/01/chaojia</id>
   <content type="html">&lt;p&gt;今天，两人又吵架了。或者说，自己又像个孙子一样被教育了一遍。 我承认自己性格上的缺点，“做决定犹豫不决，缺少魄力”。但是，你讲 的东西，谁又不知道。我不想和你在那边争。我知道每次都让女人流泪， 作为一个男的，给人很废物的感觉，这就是自己找的爱情。&lt;/p&gt;

&lt;p&gt;我发现自己的不会计较，什么都好，是造成自己跟个孙子一样的主要原因。 如果，我可以说，你那个什么什么的，你也不看看你自己是咋样的，凭什么 老说我，或许我会更有优势。但是，何必呢，看人就看好的吧。尤其是喜欢的 人。&lt;/p&gt;

&lt;p&gt;中午毛姆的《刀锋》和《人生的枷锁》两本书到了，接下来，要安排时间看完。 前天的Mac mini看来必须要配个显示器，远程操作用起来很不爽。&lt;/p&gt;

&lt;p&gt;中午在往w2health.net网站添加内容的时候，突然发现，自己违反了当初建立这个 网站的初衷：将一些跟健康有关的好的信息搜集起来，以一个便于查找的方式分类放好 供大家查阅。现在一心想的就是，往上面贴各种没有营养的内容，增加网站文章数， 提高流量。其实这样好像适得其反，添加的都是一些垃圾信息，流量反倒没了。从 明天开始，要回到初衷上来。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>体无完肤</title>
   <link href="http://saturnisbig.github.com/life/2013/03/31/tiwuwanfu"/>
   <updated>2013-03-31T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/life/2013/03/31/tiwuwanfu</id>
   <content type="html">&lt;p&gt;从毕业到现在，自己真的是生活在一种很理想的状态下，就像未涉世的孩子， 不懂人间烟火。总以为自己要不一样，但是从未想过要怎么去不一样。 总觉得要去改变，却什么也改变不了。早些时候，就告诉自己，要去面对 现实。现在，是慢慢体会到了。比如，从学校出来后，主要的问题是如何赚很多钱。 刚开始的时候，会无所谓，觉得钱够用就行。经过了一些事，觉得是自己忘记了一些曾经咬住 不放的东西，“别人能做到的事，经过努力，自己也能做到。”读书是，赚钱亦如此。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;这是观念的问题，观念很重要。&lt;/em&gt;前天在网上看到一篇博文《为什么你成不了富人》， 里面的很多观点说得蛮有道理的。观念的转变，欲望，计划，坚持不懈&amp;#8230;如果你有赚钱 的欲望，你就会开动脑筋。要有欲望，必须先摒弃旧的观点：有多少钱就过怎样的生活， 那么多钱有什么用&amp;#8230;这些都是生活中，某些人不知不觉灌输给我们的。只要简单想一下： 有钱有什么错？这样你就可以支配自己的时间，去做更有意义的事，不然，你就得在 办公室那小隔间，浪费自己的时间，做自己不想又不得不做的事，生怕断了经济来源。 观念转变后，你慢慢就会问自己，那要怎样去赚钱呢？这时候，我们的大脑真正开动 起来，欲望也随之产生，然后就是做计划。要赚钱，并不是那么简单，没有一个计划， 是坚持不了多久的。这时，你就会去制订计划。计划制定好之后，就是要坚持下去。要成为 富人并不是像想象中的那样简单的，必须付出更多的努力，没有很强的欲望是坚持不下来的。 所以，要坚持下去。&lt;/p&gt;

&lt;p&gt;昨天下午去看房子，场面相当火爆，售楼员，买的人。这就是现实。第一次来这个地方， 空气挺清新，过个高速，半小时就到了，前提是要有车。毕业前，从没想在这里待长久， 而如今，必须面对这样一个事实。每次被问，不然，你有什么打算？实在不懂得怎么去回答。 总之，还是自己经济无法独立，不然可以有更多的选择，更肯定的回答。每一次碰到现实的问题， 结婚、买房、家庭&amp;#8230;总有被伤得体无完肤的感觉！这并没有什么坏处，认清现实，自己就 会越有动力，一如上学时代不服输的我！&lt;/p&gt;

&lt;p&gt;加油！转变观念，向前吧，Teddy!&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Vim fileencoding</title>
   <link href="http://saturnisbig.github.com/tools/2013/03/10/vim-file-encoding"/>
   <updated>2013-03-10T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/tools/2013/03/10/vim-file-encoding</id>
   <content type="html">&lt;h1 id='vim'&gt;Vim文件编码问题&lt;/h1&gt;

&lt;p&gt;在Windows下用GVIM编辑了一个HTML文件，Ubuntu下在gterminal下用vim打开， 文件内的中文呈现乱码。我将乱码的内容删除，并输入中文，在保存文件的时候 出现了“转换错误（Conversion ERROR） ”，无法将编辑后的文件保存。为什么 出现这个问题呢？是不是g-terminal编码设置的问题，可是我的gterminal能够 正常的显示中文，且编码设置为uft-8，所以g-terminal应该不是问题的所在， 于是就发现必须要了解下vim是如何处理编码的问题。从互联网上搜集了相关资料如下：&lt;/p&gt;

&lt;p&gt;关于编码 ：gb2312是在ASCII基础上扩展得到的，后来又扩充了gbk和gb18030，其 中最新版的gb18030是05年才release出来，在常用简体中文字上，三种编码是完全兼容的， 只是新的标准增加了很多生僻字、偏旁部首和繁体字。unicode是和ascII完全不同的 一套编码方案，utf8就 是基于这种方案的一种编码，utf8包含有除中文外的其他多国语言， 适合全球使用，所以utf8的体积要比gb系的字符集合大很多，但在中文字方面， 和 gb18030相当，其编码和gb系完全不兼容。&lt;/p&gt;

&lt;h2 id='vim'&gt;VIM中相关的选项&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Vim 有四个跟字符编码方式有关的选项：encoding、fileencoding、fileencodings、 termencoding (这些选项可能的取值请参考 Vim 在线帮助 :help encoding-names)， 它们的意义如下:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;encoding: Vim 内部使用的字符编码方式，包括 Vim 的 buffer (缓冲区)、菜单文本、消息文本等。用户手册上建议只在 .vimrc 中改变它的值，事实上似乎也只有在 .vimrc 中改变它的值才有意义。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;fileencoding: Vim 中当前编辑的文件的字符编码方式，Vim 保存文件时也会将文件保存为这种字符编码方式 (不管是否新文件都如此)。 fileencodings: Vim 启动时会按照它所列出的字符编码方式逐一探测即将打开的文件的字符编码方式，并且将 fileencoding 设置为最终探测到的字符编码方式。因此最好将 Unicode 编码方式放到这个列表的最前面，将拉丁语系编码方式 latin1 放到最后面。 termencoding: Vim 所工作的终端 (或者 Windows 的 Console 窗口) 的字符编码方式。这个选项在 Windows 下对我们常用的 GUI 模式的 gVim 无效，而对 Console 模式的 Vim 而言就是 Windows 控制台的代码页，并且通常我们不需要改变它。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Vim 的多字符编码方式工作方式：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vim 启动，根据.vimrc 中设置的 encoding 的值来设置 buffer、菜单文本、消息文的字符编码方式。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;读取需要编辑的文件，根据 fileencodings 中列出的字符编码方式逐一探测该文件编码方式。并设置 fileencoding 为探测到的，看起来是正确的 (注1) 字符编码方式。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;对比 fileencoding 和 encoding 的值，若不同则调用 iconv 将文件内容转换为 encoding 所描述的字符编码方式，并且把转换后的内容放到为此文件开辟的 buffer 里，此时我们就可以开始编辑这个文件了。注意，完成这一步动作需要调用外部的 iconv.dll，你需要保证这个文件存在于 $VIMRUNTIME 或者其他列在 PATH 环境变量中的目录里。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;编辑完成后保存文件时，再次对比 fileencoding 和 encoding 的值。若不同，再次调用 iconv 将即将保存的 buffer 中的文本转换为 fileencoding 所描述的字符编码方式，并保存到指定的文件中。同样，这需要调用 iconv.dll&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='id3'&gt;解决此问题的方式为：&lt;/h2&gt;

&lt;p&gt;在.vimrc中设置，“set fileencodings=ucs-bom,utf-8,GB18030,gbk”&lt;/p&gt;

&lt;p&gt;其他一些有用的内容如下 ：&lt;/p&gt;

&lt;p&gt;查看当前文件编码的方式为：“:set fileencoding”；对文件编码进行转换：“:set fileencoding=utf-8”&lt;/p&gt;

&lt;p&gt;外部链接： &lt;a href='http://lijing00333.wordpress.com/2011/02/08/linux%E4%B8%8B%E5%9F%BA%E4%BA%8Evim%E7%9A%84%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81/'&gt;此文讲的内容比较使用&lt;/a&gt; &lt;a href='http://blog.chinaunix.net/space.php?uid=24173732&amp;amp;do=blog&amp;amp;cuid=2289853'&gt;这篇文章搜集大部分网上资料&lt;/a&gt; &lt;a href='http://ued.taobao.com/blog/2011/08/26/encode-war/'&gt;这篇文章探讨了浏览器解析网页过程中的编码问题&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>开始ios dev</title>
   <link href="http://saturnisbig.github.com/ios-dev/2013/03/09/ios-dev"/>
   <updated>2013-03-09T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/ios-dev/2013/03/09/ios-dev</id>
   <content type="html">&lt;h1 id='ios_'&gt;IOS 开发的资料&lt;/h1&gt;

&lt;p&gt;Time: 2013-03-09 16:00:00 To 2013-03-09 17:06:09&lt;/p&gt;

&lt;h2 id='ios'&gt;开始ios的开发&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先熟悉objective-c的语法及xcode环境，预计花两周的时间，每天2小时+0.5小时总结；&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;熟悉ios开发的sdk，阅读帮助文档，将UIView搞清楚，学习Standford的视频教程；(?时间) &lt;a href='https://developer.apple.com/library/ios/#documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/Introduction/Introduction.html#//apple_ref/doc/uid/TP40009503'&gt;View Programming Guide for ios&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;开发自己的应用，发布到app store上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id='id2'&gt;网络上的资源：&lt;/h2&gt;

&lt;p&gt;- 经验介绍 1. &lt;a href='http://www.cnblogs.com/smileEvday/archive/2012/07/01/2571582.html'&gt;《做IOS开发这一年》(一个IOS开发者一年的总结)&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href='http://blog.csdn.net/column/details/ios-learning1.html'&gt;IOS开发入门实例(CSDN上的专栏文章，详细介绍IOS开发)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;a href='http://www.zhihu.com/question/19627420'&gt;没有基础如何快速学习IOS开发(知乎上的答案)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;先学object-c 2.0程序设计 看Standford的视频教程 or Iphone3开发基础教程(Dave Mark)示例代码全部敲一遍 研究苹果的官方示例代码，逛cocoachina， iphonedev, github等 游戏编程的话: http://www.raywenderlich.com上学习cocos2d or cocos3d 社交网络上关注技术牛人，经常&lt;em&gt;交流&lt;/em&gt;、学习 坚持&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='http://www.zhihu.com/question/20016551/answer/13680483'&gt;如何才能系统的学习IOS开发，理解一些规则和深层次的机制原理&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个回答详细介绍了如何系统学习IOS开发，逐步分解，逐个击破。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href='http://www.geekaa.com/t/532'&gt;怎样开始IOS开发之路？要准备和学习什么?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;知乎相关问题地址： http://www.zhihu.com/question/19633131&lt;/p&gt;

&lt;p&gt;答案总结&lt;/p&gt;

&lt;p&gt;这里推荐一种初学者的学习方法, 1 先学好任何一种语言的面向对象&lt;/p&gt;

&lt;p&gt;2 学习objective-C语法,如果没有基础直接学语法简直就是天书,基本objective-C基本 能把键盘上的符号都用上了.如果没有理解结构能看晕过去,我觉得语法是objective-C 最大的门槛.很多人看这种语法瞬间没了心情,但是如果有面向对象的基础很容易理解.&lt;/p&gt;

&lt;p&gt;3 环境调试, 我还是推荐直接买个苹果电脑吧 Mac Mini最便宜的. 否则在PC上装苹果系统 可能折腾两天连安装界面都看不到直接打击积极性.&lt;/p&gt;

&lt;p&gt;4 花钱买99美元的个人开发者帐号 企业299美元, 然后慢慢熟悉发布调试流程. http://www.fbair.net/bbs/read.php?tid=276&lt;/p&gt;

&lt;p&gt;然后就是一定先开发一个小游戏卖一下试下水,否则很多流程你接触不到.估计最短也要 半个月时间来熟悉这一切, 在加上苹果审核时间,没一个月基本上连入门都不够.&lt;/p&gt;

&lt;p&gt;至于看书我感觉还是看网上看吧 官方网站都有基本的入门教程, xcode4也很新. 官方网站教程 http://www.apple.com.cn/developer/mac/library/navigation/ios.html 所有类库 http://developer.apple.com/library/ios/navigation/&lt;/p&gt;

&lt;p&gt;书籍: iPhone App Development: The Missing Mannul http://appdevmanual.com/ 推荐这本书，从安装 XCode 到开发再到 App 上架销售追踪，书里都有涉及，并且在书后的 Appendix 给出了相关话题更深入的资源去处。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;- 相关工具 1. &lt;a href='http://coolshell.cn/articles/5089.html'&gt;10个必需的IOS开发工具和资源&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;- 八卦 1. &lt;a href='http://www.williamlong.info/archives/3061.html'&gt;开发一个IOS应用没有那么容易(新加坡的IOS开发者吐槽IOS开发的文章)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;- 博客&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http://www.raywenderlich.com/ (IOS/Iphone游戏开发教程)&lt;/li&gt;

&lt;li&gt;http://blog.csdn.net/ostrichmyself/article/details/7782089 ()&lt;/li&gt;

&lt;li&gt;http://blog.csdn.net/ostrichmyself/article/category/1078482&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Q &amp;amp;&amp;amp; A (问答地方)&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;cocoachina: http://www.cocoachina.com/&lt;/li&gt;

&lt;li&gt;stackoverflow上&lt;/li&gt;

&lt;li&gt;iphonedev上&lt;/li&gt;
&lt;/ol&gt;</content>
 </entry>
 
 <entry>
   <title>sqlite export and import</title>
   <link href="http://saturnisbig.github.com/programming/2013/02/17/sqlite-export-and-import"/>
   <updated>2013-02-17T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/programming/2013/02/17/sqlite-export-and-import</id>
   <content type="html">&lt;h2 id='export'&gt;export&lt;/h2&gt;

&lt;p&gt;-to sql file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $sqlite test.db
    sqlite&amp;gt;.output data.sql
    sqlite&amp;gt;.dump (table1 table2)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-to another db&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $sqlite3 test.db &amp;quot;.dump&amp;quot; | sqlite3 test2.db&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-export table structure&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $sqlite3 db1
    $sqlite&amp;gt; .tables
    t1  tx
    $sqlite&amp;gt; select * from t1;
    |A
    |B
    $sqlite&amp;gt; .q
    
    $sqlite3 db2
    $sqlite&amp;gt; .tables
    $sqlite&amp;gt; ATTACH DATABASE db1 as db1;
    $sqlite&amp;gt; select * from db1.t1;
    |A
    |B
    $sqlite&amp;gt; create table t2 as select * from db1.t1 where 1=2;
    $sqlite&amp;gt; select * from t2;
    |A
    |B&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='import'&gt;import&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sqlite&amp;gt;.seperator &amp;quot;,&amp;quot;
sqlite&amp;gt;.import data.sql db_table
sqlite&amp;gt;select * from db_table&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id='id1'&gt;使用工具&lt;/h2&gt;

&lt;p&gt;用SQLite Developer,工具-&amp;gt;提取数据库SCHEMA和数据-&amp;gt; 选择表-&amp;gt;输入导出文件名，既可导出&lt;/p&gt;

&lt;h2 id='mysql'&gt;和MySQL的转换&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;mysql2sqlite&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;convert mysql to sqlite.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqldump -h 127.0.0.1 -P 3307 -u root --default-character-set=utf8 -ppasswd dbname | dumpfile.txt
$print hello &lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;sqlite to mysql&lt;/li&gt;
&lt;/ol&gt;</content>
 </entry>
 
 <entry>
   <title>hello jekyll</title>
   <link href="http://saturnisbig.github.com/2013/02/16/hello-jekyll"/>
   <updated>2013-02-16T00:00:00+08:00</updated>
   <id>http://saturnisbig.github.com/2013/02/16/hello-jekyll</id>
   <content type="html">&lt;p&gt;通过jekyll-bootstrap轻松的在github上部署你的博客。&lt;/p&gt;</content>
 </entry>
 
 
</feed>